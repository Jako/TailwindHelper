{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"TailwindHelper","text":"<p>MODX Helper for Tailwind.</p>"},{"location":"#requirements","title":"Requirements","text":"<ul> <li>MODX Revolution 2.8+</li> <li>PHP 7.2+</li> </ul>"},{"location":"#features","title":"Features","text":"<p>With this MODX Revolution extra all used CSS classes in chunks, templates, resources and template variables are collected and saved to a safelist.json file. This safelist can be used to avoid purging the used CSS classes in a MODX installation.</p>"},{"location":"#license","title":"License","text":"<p>The project is licensed under the GPLv2 license.</p>"},{"location":"#translations","title":"Translations","text":"<p>Translations of the package can be made for the Default Lexicon and the System Setting Lexicon</p>"},{"location":"contributors/","title":"Contributors","text":"<p>The TailwindHelper project was started in 2021 by Thomas Jakobi.</p> <p>Many thanks to all who contributed, whether by creating pull requests, submitting bug reports, or donating.</p>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#install-from-modx-extras","title":"Install from MODX Extras","text":"<p>Search for TailwindHelper in the Package Manager of your MODX installation and install it in there.</p>"},{"location":"installation/#manual-installation","title":"Manual installation","text":"<p>If you can't access the MODX Extras Repository in your MODX installation, you can manually install TailwindHelper.</p> <ul> <li>Download the transport package from MODX Extras (or one of the pre built transport packages in _packages)</li> <li>Upload the zip file to your MODX installation's <code>core/packages</code> folder or upload it manually in the MODX Package Manager.</li> <li>In the MODX Manager, navigate to the Package Manager page, and select 'Search locally for packages' from the dropdown button.</li> <li>TailwindHelper should now show up in the list of available packages. Click the corresponding 'Install' button and follow the instructions to complete the installation.</li> </ul>"},{"location":"installation/#build-it-from-source","title":"Build it from source","text":"<p>To build and install the package from source you could use Git Package Management. The GitHub repository of TailwindHelper contains a config.json to build that package locally. Use this option, if you want to debug TailwindHelper and/or contribute bugfixes and enhancements.</p>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#menu-entry","title":"Menu Entry","text":"<p>To generate a safelist.json file with the content of chunks, templates, resources and template variables, you simply have to click on the TailwindHelper menu entry in the Extras menu. The target path of the safelist.json can be changed by a system setting.</p> <p>The CSS classes in the files are detected in standard <code>class=\"whatever\"</code> attributes and Alpine.js <code>:class=\"{ 'whatever': variable === 'foo' }\"</code> attributes. These examples will add <code>whatever</code> and <code>foo</code> to the detected classes. The class names are separated by the space character and included in the list as individual classes.</p>"},{"location":"usage/#system-settings","title":"System Settings","text":"<p>TailwindHelper uses the following system settings in the namespace <code>tailwindhelper</code>:</p> Key Description Default tailwindhelper.debug Log debug information in the MODX error log. No tailwindhelper.removeModxTags Remove remaining MODX tags in the safelist.json. Yes tailwindhelper.safelistFolder The location of the safelist.json. <code>{core_path}components/tailwindhelper/elements/purge/</code>"},{"location":"usage/#example-usage","title":"Example usage","text":""},{"location":"usage/#parcel-2webpack","title":"Parcel 2/Webpack","text":"<p>If you want to purge your tailwind css with Parcel 2 or in Webpack, you have to refer the created <code>safelist.json</code> in the <code>tailwind.config.js</code> to reduce the size of the build:</p> <pre><code>const safelist = require('./path-to-your-core/core/components/tailwindhelper/elements/purge/safelist.json');\nsafelist = safelist.concat([\n    'additional-class'\n]);\n\nmodule.exports = {\n    ...\n    purge: {\n        content: ['./src/**/*.html'],\n        safelist: safelist\n    },\n    ...\n</code></pre> <p>In Tailwind 3 purgeCSS is not used anymore and you have to reference the safelist.json directly in a safelist configuration:</p> <pre><code>const safelist = require('./path-to-your-core/core/components/tailwindhelper/elements/purge/safelist.json');\nsafelist = safelist.concat([\n    'additional-class'\n]);\n\nmodule.exports = {\n    ...\n    content: {\n        content: ['./src/**/*.html'],\n    },\n    safelist: safelist\n    ...\n</code></pre>"}]}